#############################################
# GraphRAG 环境变量示例说明文件 (.env.example)
# 使用方法：复制为项目根目录 .env 并填写实际值。
# 本文件已移除所有实际参数值，只保留变量名与注释，
# 方便审阅与安全提交（可纳入版本控制）。
#############################################

#############################################
# Neo4j 基本连接配置
#############################################
NEO4J_URI=bolt://localhost:7687            # Neo4j Bolt 连接地址 (示例: bolt://localhost:7687)
NEO4J_USER=neo4j                           # Neo4j 用户名
NEO4J_PASSWORD=__FILL_ME__                 # Neo4j 密码（请填写；不要提交真实密码）

#############################################
# 本地 LLM / Embedding 服务配置（LM Studio OpenAI 兼容）
#############################################
LLM_BASE_URL=http://127.0.0.1:1234         # LM Studio 服务地址 (示例: http://127.0.0.1:1234)
LLM_API_KEY=dummy                          # 占位（LM Studio 通常不校验，可留空/占位）
LLM_MODEL=openai/gpt-oss-120b              # 用于聊天/回答的模型名称
EMBEDDING_MODEL=text-embedding-qwen3-embedding-0.6b  # 向量嵌入模型名称（需与 LM Studio 中加载一致）

#############################################
# 检索 & 切分基础参数
#############################################
TOP_K=8                                    # 初始向量检索返回的 Chunk 数
EXPAND_HOPS=2                              # 上下文扩展跳数：1=仅实体反向；2=再跟随关系/共现拓展
CHUNK_SIZE=800                             # 文本切分单块最大字符数
CHUNK_OVERLAP=120                          # 邻接块重叠字符数（防止语义断裂）
# DISABLE_ENTITY_EXTRACT=                  # （可选）设为 true 跳过实体抽取/图关系（仅向量检索）

#############################################
# 关系抽取 (LLM Pairwise) 与调试
#############################################
RELATION_EXTRACTION=true                   # 是否启用 LLM 关系抽取
RELATION_WINDOW=2                          # 窗口范围：对每个 chunk 与其后/前若干邻居配对
RELATION_CHUNK_TRUNC=600                   # 传给 LLM 的每个 chunk 截断长度（降低 token 成本）
RELATION_LLM_TEMPERATURE=0.2               # 关系抽取温度（越低越稳定）
RELATION_DEBUG=true                        # 输出关系原始 JSON / fallback 日志
REL_FALLBACK_CONFIDENCE=0.3                # 当解析失败采用 STEP_NEXT fallback 的置信度

#############################################
# 关系类型权重（影响排序加成；LLM 关系实际加成=权重 * confidence）
#############################################
REL_WEIGHT_STEP_NEXT=0.12                  # 顺序/下一步（流程线性）
REL_WEIGHT_REFERENCES=0.18                 # 引用 / 参考
REL_WEIGHT_FOLLOWS=0.16                    # 跟随 / 时间或步骤跟进
REL_WEIGHT_CAUSES=0.22                     # 因果（重要，默认给较高）
REL_WEIGHT_SUPPORTS=0.20                   # 论据支持/证据
REL_WEIGHT_PART_OF=0.15                    # 组成关系 / 属于
REL_WEIGHT_SUBSTEP_OF=0.17                 # 子步骤关系（比 PART_OF 略高）
REL_WEIGHT_CONTRASTS=0.14                  # 对比 / 区别
REL_WEIGHT_DEFAULT=0.15                    # 未识别类型 fallback 权重
REL_WEIGHT_RELATES=0.15                    # 图中非 LLM 共享实体 RELATES_TO 加成（不乘置信度）
REL_WEIGHT_COOCCUR=0.10                    # 实体共现 CO_OCCURS_WITH 加成（不乘置信度）

#############################################
# 缓存 / 索引（可选覆盖；不设置将使用代码默认）
#############################################
# EMBED_CACHE_MAX=                         # 问题向量缓存 LRU 容量 (示例: 128)
# ANSWER_CACHE_MAX=                        # 非流式回答缓存 LRU 容量 (示例: 64)
# VECTOR_INDEX_NAME=                       # 自定义 Neo4j 向量索引名（需先在库中创建）

#############################################
# 其他：根据需要新增（如鉴权、限流、日志级别等）
#############################################

#############################################
# （新增占位）混合检索 / Rerank / 图中心性 / 实体标准化 / 内容哈希
# 说明：全部默认注释，不生效；如需启用，去掉行首 # 并重启服务。
#############################################
# RERANK_ENABLED=                          # 启用结果二次精排（Cross-Encoder 占位）
# RERANK_ALPHA=                            # final = alpha * composite + (1-alpha) * rerank (默认: 0.6)
# BM25_ENABLED=                            # 启用 BM25 稀疏检索信号融合
# BM25_WEIGHT=                             # BM25 归一得分的加权系数 (默认: 0.4)
# BM25_MIN_DF=                             # 构建倒排时的最小文档频率过滤 (默认: 1)
# GRAPH_RANK_ENABLED=                      # 启用图中心性 (degree) 加成
# GRAPH_RANK_WEIGHT=                       # 图中心性得分加成系数 (默认: 0.1)
# HASH_INCREMENTAL_ENABLED=                # 启用内容哈希脏区增量
# HASH_ALGO=                               # 内容哈希算法 (sha256 / md5，默认: sha256)
ENTITY_NORMALIZE_ENABLED=true              # 启用实体标准化/同义合并（影响 ingest & query）
SYNONYMS_FILE=./synonyms.json              # 同义词文件路径 (也可用 ./synonyms.tsv)

#############################################
# Embedding EOS 兼容（针对出现 tokenizer.ggml.add_eos_token 警告的模型）
#############################################
EMBEDDING_APPEND_EOS=false                 # 若为 true 在每条 embedding 输入末尾追加 EOS token（避免部分 GGUF 模型警告）
EMBEDDING_EOS_TOKEN=                       # 自定义 EOS（留空默认 '\n'）；必须与模型训练期望一致

#############################################
# Embedding 批量与超时控制（防止大批量一次请求超时）
#############################################
EMBEDDING_BATCH_SIZE=64                    # 初始批大小（请求体过大/超时会自动二分降批，最小降到 1）
EMBEDDING_TIMEOUT=120                      # 单批请求超时秒数；超时会尝试拆分成更小批次重试
EMBEDDING_MAX_RETRIES=6                    # 当批量降到 1 且仍遇到 429/5xx 时的最大指数退避重试次数

#############################################
# 噪声控制（实体/共现）
#############################################
# ENTITY_MIN_LENGTH=                       # 丢弃长度低于该值的实体（默认 2）
# COOCCUR_MIN_COUNT=                       # prune 共现计数低于该阈值的 CO_OCCURS_WITH 边（默认 2）

#############################################
# 提示：
# 1. 布尔值统一使用 true/false。
# 2. 修改后需重启相关服务或重新运行 ingest 流程。
# 3. 生产环境请通过安全方式（CI Secret / Vault）注入敏感信息。
#############################################
