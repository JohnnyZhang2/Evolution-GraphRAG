#############################################
# GraphRAG 示例配置 (.env.example)
# 复制为 .env 后填写敏感值；生产避免提交 .env。
#############################################

#############################################
# Core Connections
#############################################
NEO4J_URI=bolt://localhost:7687            # Neo4j 连接 URI
NEO4J_USER=neo4j                           # Neo4j 用户名
NEO4J_PASSWORD=CHANGE_ME                   # Neo4j 密码占位，务必修改

#############################################
# LLM / Embeddings
#############################################
#LLM_BASE_URL=http://127.0.0.1:1234        # 自定义推理基地址(可选)
#LLM_API_KEY=YOUR_KEY_HERE                 # 远程模型需要的 API Key
LLM_MODEL=openai/gpt-oss-120b              # 主回答/关系抽取模型
EMBEDDING_MODEL=text-embedding-qwen3-embedding-0.6b   # 文档/查询嵌入模型
LLM_TEMPERATURE=0.2                        # 回答生成温度(若实现)

#############################################
# Chunking (re-ingest required when changed)
#############################################
CHUNK_SIZE=500                             # Chunk 字符长度
CHUNK_OVERLAP=160                          # Chunk 重叠长度

#############################################
# Retrieval Core
#############################################
TOP_K=15                                   # 初始向量检索数量
EXPAND_HOPS=1                              # 图扩展跳数 (1=仅实体; >1 才包含关系)
BM25_ENABLED=true                          # 启用 BM25 稀疏互补
BM25_WEIGHT=0.40                           # 稀疏得分权重
ENTITY_NORMALIZE_ENABLED=true              # 同义/别称归一
SYNONYMS_FILE=./synonyms.json              # 同义词映射文件

#############################################
# Relation Extraction
#############################################
RELATION_EXTRACTION=true                   # 启用 LLM 关系抽取
RELATION_WINDOW=2                          # Pair 窗口宽度
RELATION_CHUNK_TRUNC=650                   # 传 LLM 截断长度
RELATION_LLM_TEMPERATURE=0.0               # 关系抽取温度
RELATION_DEBUG=false                       # 输出调试
RELATION_MIN_CONFIDENCE=0.50               # 置信度过滤
RELATION_ENFORCE_TYPES=false               # 是否强制白名单
RELATION_TYPES=CAUSES,SUPPORTS,PART_OF,SUBSTEP_OF,STEP_NEXT,REFERENCES,CONTRASTS
RELATION_FALLBACK_TYPE=REFERENCES          # 非白名单回退类型（默认 REFERENCES；留空则直接丢弃）

#############################################
# Relation Weights (expansion scoring)
#############################################
REL_WEIGHT_STEP_NEXT=0.12
REL_WEIGHT_REFERENCES=0.18
REL_WEIGHT_FOLLOWS=0.16
REL_WEIGHT_CAUSES=0.22
REL_WEIGHT_SUPPORTS=0.2
REL_WEIGHT_PART_OF=0.15
REL_WEIGHT_SUBSTEP_OF=0.17
REL_WEIGHT_CONTRASTS=0.14
REL_WEIGHT_DEFAULT=0.15
REL_WEIGHT_RELATES=0.05                    # 调低减少实体共现主导
REL_WEIGHT_COOCCUR=0.05
REL_WEIGHT_ENTITY=0.05

#############################################
# Adaptive Query & Subgraph
#############################################
ADAPTIVE_QUERY_STRATEGY=true               # 按问句类型动态调参
SUBGRAPH_ENABLE=true                       # 启用子图扩展
SUBGRAPH_MAX_NODES=120                     # 子图节点上限
SUBGRAPH_MAX_DEPTH=2                       # 预留深度控制
SUBGRAPH_REL_TYPES=*                       # 允许的关系类型 ('*'=全部)
SUBGRAPH_WEIGHT=0.10                       # 子图来源加成 (需代码接入)
SUBGRAPH_PER_ENTITY_LIMIT=4                # 单实体最多扩展 chunk 数

# ---- 深度控制 (Depth Control) ----
# 以下用于强制一跳不吃满容量，保证二跳节点出现（仅在 SUBGRAPH_MAX_DEPTH>1 时有意义）
# SUBGRAPH_DEPTH1_CAP: depth=1 新增(实体+关系)节点硬上限；0=不限制。relation 场景可设 20 左右。
SUBGRAPH_DEPTH1_CAP=0
# SUBGRAPH_DEPTH1_REL_CAP: depth=1 通过关系新增的节点上限；0=不限制。relation 场景建议 6~10。
SUBGRAPH_DEPTH1_REL_CAP=0
# SUBGRAPH_DEEP_RESERVE_NODES: 为深层(depth>=2)预留的槽位数量；若想强制出现二跳可设 20~30。
SUBGRAPH_DEEP_RESERVE_NODES=20

# ---- 关系节点保留与多关系加权 (Relation Multi/Hits) ----
# SUBGRAPH_REL_MIN_KEEP: 至少保留的关系来源节点数，避免被实体节点挤出
SUBGRAPH_REL_MIN_KEEP=6
# SUBGRAPH_REL_MULTI_SCALE: 额外关系(除代表关系外)累积贡献缩放；0.3~0.4 之间平衡增益与噪声
SUBGRAPH_REL_MULTI_SCALE=0.35
# SUBGRAPH_REL_HITS_DECAY: 第 i 条附加关系贡献 * decay^i；0.6~0.8
SUBGRAPH_REL_HITS_DECAY=0.7
# SUBGRAPH_REL_HITS_MAX: 参与多关系累积的最大关系条数
SUBGRAPH_REL_HITS_MAX=5
# SUBGRAPH_REL_DENSITY_CAP: 超过该关系数量开始惩罚（防 hub）
SUBGRAPH_REL_DENSITY_CAP=6
# SUBGRAPH_REL_DENSITY_ALPHA: 惩罚强度  penalty=1/(1+alpha*(len-cap))  建议 0.1~0.2
SUBGRAPH_REL_DENSITY_ALPHA=0.15

# ---- 路径级评分 (Path Scoring) ----
# 启用后对子图节点聚合实体共享/关系路径产生 path_score，加权到最终 bonus
SUBGRAPH_PATH_SCORE_ENABLE=true
# 实体路径基础贡献值
SUBGRAPH_PATH_ENTITY_BASE=0.5
# 关系路径置信度乘权
SUBGRAPH_PATH_REL_CONF_WEIGHT=0.6
# 实体路径深度衰减 (建议 0.6~0.75) — 已调低减少一跳主导
SUBGRAPH_PATH_ENTITY_DECAY=0.65
# 关系路径深度衰减
SUBGRAPH_PATH_REL_DECAY=0.7
# 聚合后缩放系数 (过大会放大结构偏置) 建议 0.28~0.45
SUBGRAPH_PATH_SCORE_WEIGHT=0.32
# 每节点保留的路径记录条数 (调试展示)
SUBGRAPH_PATH_MAX_RECORDS=8
# ID 规范化：去零宽/首尾空白/折叠空格，避免子图匹配重复
ID_NORMALIZE_ENABLE=true

#############################################
# Graph Rank (optional noise-prone)
#############################################
GRAPH_RANK_ENABLED=false                   # 度中心性加权
GRAPH_RANK_WEIGHT=0.10

#############################################
# Context Pruning
#############################################
CONTEXT_MAX=24                             # 最终保留上下文数
CONTEXT_MIN_PER_REASON=2                   # 每来源最少保留
CONTEXT_PRUNE_RATIO=1.6                    # 启动裁剪倍数阈值
CONTEXT_PRUNE_GAP=0.55                     # 分差过滤阈值

#############################################
# Caches / Index / Embedding Advanced (optional)
#############################################
#EMBED_CACHE_ENABLED=true
#EMBED_CACHE_SIZE=50000
#VECTOR_INDEX_NAME=chunk_embedding_index
#EMBEDDING_BATCH_SIZE=64
#EMBEDDING_TIMEOUT=120
#EMBEDDING_MAX_RETRIES=6

#############################################
# Incremental / Hash / Normalization (optional)
#############################################
#HASH_INCREMENTAL_ENABLED=false
#HASH_ALGO=sha256
#ENTITY_MIN_LENGTH=2
#COOCCUR_MIN_COUNT=2

#############################################
# Rerank (future / optional)
#############################################
#RERANK_ENABLED=false                      # 启用后对筛选 contexts 再做语义重排
#RERANK_ALPHA=0.6                          # final = alpha*composite + (1-alpha)*rerank
#RERANK_MODEL=bge-reranker-large           # 真实 cross-encoder 模型名(可选)
#RERANK_ENDPOINT=http://127.0.0.1:9000/rerank  # 若部署独立 rerank 服务
#RERANK_TOP_N=60                           # 送入 rerank 的最大候选数
#RERANK_TIMEOUT=15                         # 远程调用超时(秒)

#############################################
# Diagnostics / Debug
#############################################
DEBUG_RETRIEVE_LOG=false                   # 输出检索过程(若实现)

#############################################
# Tuning Tips
#############################################
# - 召回不足: 提高 TOP_K 或 BM25_WEIGHT。
# - 噪声多: 降低 BM25_WEIGHT / 关系权重; 提高 RELATION_MIN_CONFIDENCE。
# - 上下文过长: 降低 CONTEXT_MAX 或收紧 CONTEXT_PRUNE_GAP。
# - 列表问句: 确认 membership 快捷路径触发。
# - 因果结构: 适度提升 CAUSES / SUPPORTS 权重。

#############################################
# Security Notes
#############################################
# 1. 不要提交真实密码/API Key。
# 2. 生产中使用 Vault/KMS 或 CI Secret 注入。
# 3. 定期轮换敏感凭证。

